---
- hosts: localhost
  become: false

# ////////////////////////////////////////////////////////////////////////////////////////
#  VARIABLES
# ////////////////////////////////////////////////////////////////////////////////////////
  vars_files:
  - "../vars/{{ cloud_provider }}/{{ module_name }}_vars_{{ cloud_provider }}.yaml"

  vars:
    # EXTRA VARS
    destroy: false
    cloud_provider: aws

    # PROJECT VARS
    project_dir: KubeflowCluster
    project_path: ~/Git
    state: present

    # REMOTE STATE VARS
    aws_region: us-west-2
    state_bucket: jenkins-state-nightwalkers 
    state_object_key: us-east-1/s3/jenkins-terraform.tfstate
    lock_db: tf-state-jenkins-lock

    # PLAYBOOK VARS
    module_name: static
    playbook_path: "{{ project_path }}/{{ project_dir }}/ansible/terraform/{{ cloud_provider }}"

# ////////////////////////////////////////////////////////////////////////////////////////
#  VARIABLES
# ////////////////////////////////////////////////////////////////////////////////////////
  environment:

    TF_VAR_state_bucket_name: "{{ state_bucket }}" 
    TF_VAR_state_object_key: "{{ state_object_key }}"
    TF_VAR_state_lock_table_name: "{{ lock_db }}"
    AWS_REGION: "{{ aws_region }}"


  tasks:
    - name: Run Terraform Deployment for {{ module_name | capitalize }} Resources
      shell:
      args:
        executable: /usr/bin/bash
        cmd: bash deploy.sh
        chdir: "{{ playbook_path }}/{{ module_name }}/"
      register: "{{ project_dir }}_{{ module_name }}_results"
      when: destroy == "false" 
    # - debug:
    #     var: "{{ project_dir }}_{{ module_name }}_results.stdout"

    - name: Destroy {{ module_name | capitalize }} Resources
      shell:
      args:
        executable: /usr/bin/bash
        cmd: bash deploy.sh
        chdir: "{{ playbook_path }}/{{ module_name }}/"
      register: "{{ project_dir }}_{{ module_name }}_results"
      when: destroy == "true" 
    # - debug:
    #     var: "{{ project_dir }}_{{ module_name }}_results.stdout"
